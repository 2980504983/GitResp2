# 面向对象：
# 识别对象.找人，创建类
# 分配职责.干活，在类中输入数据，设定方法
# 建立交互.确定对象之间的调用关系

"""
类与类的区别：行为不同
对象的区别：数据不同
"""

# 类语法：
    # class 类名（）：
        # def__init__(self, 参数)：
            # 数据成员
            # self.数据1 = 参数
        # 行为成员
        # def 方法名称（）：
            # 方法体

# 创建对象：
    # 自动调用了__init__()构造函数
    # 变量名 = 类名（参数）