# 题目5：（位取反、位移动）取一个整数a从右端开始的5〜8位。

# 按位取反：
# x按位取反运算公式为： -(x+1)

# 位移动：
# 左移动公式：
# b << n == b * 2**n
# 例如：3 << 4 == 3 * 2**4 == 48

# 右移动公式：
# b >> n == b // 2**n (如果b是奇数，取商)
# 例如：4 >> 1 == 4 // 2**1 = 2

# 思路：
# bin(360) = 0b101101000
# 假如输入360，将输入的数字右移动4位(可以理解为将数字的二进制数的最后四位去掉)，得到bin(c):
# 0b10110 , 在通过c & b截取右边一到四位，(因为bin(b)为0b1111，根据 & 各数相比同一取一，
# 否则取零的规则，1111能截取到c的一到四位) 注：当位数不够时通过在数的前面补零来凑

a = int(input('输入一个数字: '))
b = 0                 # 0
b = ~b                # -1
b = b << 4              # 10000
b = ~b                # 1111
c = a >> 4
print(c)
d = c & b
print('a:', bin(a))
print('b:', bin(b))
print('c:', bin(c))
print('d:', bin(d))
