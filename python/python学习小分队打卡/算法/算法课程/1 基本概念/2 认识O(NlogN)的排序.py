"""
    递归:
        剖析递归行为以及时间复杂度的估算:
            用递归方法寻找一个数组中的最大值:

            master公式:
                master公式用于求递归的时间复杂度(只有满足公式的递归才能用)
                T(n) = a * T(N/b) + O(N**d)

                T(n)表示母问题时间复杂度(也就是递归的开头)，a表示子问题的递归次数，T(N/b)表示
                子问题的时间复杂度(要满足master公式，子问题时间复杂度要相同)，O(N**d)表示额外
                的时间复杂度

                求满足master公式的递归的时间复杂度:
                    当logba(b是底数a是真数) < d时，时间复杂度为: O(N**d)
                    logba > d  , 时间复杂度: O(N**(logba))
                    logba == d  , 时间复杂度: O((N**d)*logn)

    归并排序:
        递归的将数组分成两半，最后的到若干个数， 在递推时，将数字不断拼凑成有序的数组片段，最终
        得到有序数组，详细见 归并排序.jpg  可以用master公式求出时间复杂度，为O(N*logn)
        空间复杂度O(n)

        归并排序拓展:
            小和问题:
"""