"""
前情回顾:
    1 IO模型: 阻塞io， 非阻塞io， io多路复用
        阻塞io:
            默认形态，效率低，实现简单
        非阻塞io:
            将io变为非阻塞状态
        io多路复用:
            select:
                支持windows，linux，unix
                效率相对epoll一般，最多监控1024个IO
            poll:
                支持linux，unix
                效率相对epoll一般，支持同时监控更多的io
            epoll:
                支持linux
                效率高，有更多触发方式，支持同时监控更多的io

    2 协程:
        在应用层，通过函数的暂停跳转，实现多个任务间切换执行，其中每个函数都可以从任意位置暂停
        跳出，并重新调用后，继续执行
        本质是单线程，无法使用多核资源，因此，开销少
"""